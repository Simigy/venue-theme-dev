{% comment %}
Empty cart drawer to prevent theme conflicts
{% endcomment %}

<style>
/* Hide theme's cart drawer completely */
.cart-draw, .js-cart-draw, [data-drawer-panel] {
    display: none !important;
}
</style>

<script>
// Override theme's cart opening to use our custom cart
document.addEventListener('DOMContentLoaded', function() {
  // Override theme's cart opening function
  if (window.theme) {
    const originalMfpOpen = window.theme.mfpOpen;
    window.theme.mfpOpen = function(type) {
      if (type === 'cart') {
        // Use our custom cart instead
        if (window.openSimpleCart) {
          window.openSimpleCart();
          return;
        }
      }
      // Fallback to original function for other modals
      if (originalMfpOpen) {
        originalMfpOpen.call(this, type);
      }
    };
  }

  // Listen for add to cart events
  document.addEventListener('ajaxCart:afterProductAdded', function() {
    if (window.openSimpleCart) {
      window.openSimpleCart();
    }
  });

  // Intercept add to cart forms
  document.querySelectorAll('form[action*="/cart/add"]').forEach(form => {
    form.addEventListener('submit', function(e) {
      setTimeout(() => {
        if (window.openSimpleCart) {
          window.openSimpleCart();
        }
      }, 500);
    });
  });
});
</script>if (this.notifyOnAdd) {
  await window.theme.cart.store.getState().resetVariantsBeingAdded();
  if (!this.closest('.cart-draw')) theme.mfpOpen('cart');
} else {
  // ...
}if (typeof openSimpleCart === 'function') {
  openSimpleCart();
} else {
  theme.mfpOpen('cart');
}